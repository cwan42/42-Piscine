Assignment name  : only_a
Expected files   : only_a.c
Allowed functions: write
Write a program that displays a 'a' character on the standard output.

#include <unistd.h>

int    main(void)
{
       write(1, "a", 1);
}

Assignment name  : only_z
Expected files   : only_z.c
Allowed functions: write
Write a program that displays a 'z' character on the standard output.

#include <unistd.h>

int     main(void)
{
        write(1, "z", 1);
}

Assignment name  : hello
Expected files   : hello.c
Allowed functions: write
Write a program that displays "Hello World!" followed by a \n.

#include <unistd.h>

int     main(void)
{
        write(1, "Hello World!\n", 13);
        return (0);
}

Assignment name  : ft_countdown
Expected files   : ft_countdown.c
Allowed functions: write
Write a program that displays all digits in descending order, followed by a newline.

Example:
$> ./ft_countdown | cat -e
9876543210$
$>

#include <unistd.h>

int    main(void)
{
       char a = '9';
       while (a >= '0')
       {
              write (1, &a, 1);
              a--;
       }
}

Assignment name  : maff_alpha
Expected files   : maff_alpha.c
Allowed functions: write
Write a program that displays the alphabet, with even letters in uppercase, and
odd letters in lowercase, followed by a newline.
Example:
$> ./maff_alpha | cat -e
aBcDeFgHiJkLmNoPqRsTuVwXyZ$

#include <unistd.h>

int       main(void)
{
       char a = 'a';
       char b = 'B';
       while (b <= 'Z')
       {
              write (1, &a, 1);
              write (1, &b, 1);
              a += 2;
              b += 2;
       }
       write (1, "\n", 1);
       return (0);
}

Assignment name  : maff_revalpha
Expected files   : maff_revalpha.c
Allowed functions: write
Write a program that displays the alphabet in reverse, with even letters in
uppercase, and odd letters in lowercase, followed by a newline.
Example:
$> ./maff_revalpha | cat -e
zYxWvUtSrQpOnMlKjIhGfEdCbA$
*/

#include <unistd.h>

int    main(void)
{
       char z = 'z';
       char y = 'Y';
       while (y >= 'a')
       {
              write (1, &z, 1);
              write (1, &y, 1);
              z -= 2;
              y -= 2;
       }
       write (1, "\n", 1);
       return (0);
}

Assignment name  : ft_print_numbers
Expected files   : ft_print_numbers.c
Allowed functions: write
Write a function that displays all digits in ascending order.
Your function must be declared as follows:
void	ft_print_numbers(void);
#include <unistd.h>
void    ft_print_numbers(void)
{
       write(1, "0123456789", 10);
}

#include <unistd.h>

void   ft_print_numbers(void)
{
       char num = '0';
       while (num <= '9')
       {
              write (1, &num, 1);
              num++;
       }
}
/* Check: Submit function w/o main or as a program?
int    main(void)
{
       ft_print_numbers();
}
*/
